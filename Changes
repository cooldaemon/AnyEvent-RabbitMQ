Revision history for Perl extension AnyEvent::RabbitMQ

        - Defer finding the path of the included spec file in order to allow
          programs to either provide a path for it or use another mechanism
          to load the Net::AMQP protocol (like use Net::AMQP::Protocol::v0_8).
          Otherwise, AnyEvent::RabbitMQ dies at compile time if the share dir
          cannot be found, even if the protocol was already loaded.

        - Disable Nagle's algorithm in order to reduce latency. For RPC style
          applications this algorithm artificially introduces ~50ms of latency
          for full roundtrip, imposing a limit of only 25 calls/s. This change
          improves RPC throughput noticeably (even tenfold for fast servers).

        - Do message publish using a single socket write (instead of three).
          This improves throughput of small messages by 30%.

        - Fix that fact that the AMQP server can ask us to close the
          connection - we should respond with CloseOk and then
          not say anything further otherwise we get a SIGPIPE.

        - Fix a race condition stopping connections from closing properly.
          If you ask to open a channel, and then immediately try to close
          the connection then the not yet open channel would never remove
          itself from the associated connection, resulting in the connection
          never being terminated (as there were still channels associated with
          it).

        - Stop leaking all RabbitMQ messages recieved back inside
          a closure.

        - Fix a bug when closing a channel that is subscribed to multiple queues.

        - Allow multiple clients to have independent connections
          to RabbitMQ, as long as they all use the same spec file.

1.05    Tue Jul 22 16:55:55 2011
        - Fixed a compiling error.

1.04    Tue Jul 19 17:04:24 2011
        - Bug fix for consuming large messages.

1.03    Thu Apr  7 02:55:12 2011
        - Separate AnyEvent::RabbitMQ from Net::RabbitFoot.
        - Avoid (additional) issues when in global destruction.
        - Do not set reply_to to an empty string in the header frame.
        - Implement basic.reject (requires RabbitMQ >= 2.0.0).
        - Store server properties in the object for easy server product
          and sever version access.
        - Shutdown the AnyEvent handle using push_shutdown.
        - Be more careful in DESTROY blocks.

1.02    Wed Jun 30 11:35:32 2010
        - Fix errors in global destruction due to destruction order being
          random.
        - Fix bug if you call ->close on a Net::RabbitFoot instance which
          is not already connected. Previously this would never return.

1.01    Sun Mar 18 07:21:58 2010
        - fix bugs.
        - support channel.flow.

1.00    Fri Mar  5 11:30:00 2010
        - fix module name.

0.01    Sun Dec  6 20:54:03 2009
        - original version
